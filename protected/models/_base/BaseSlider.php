<?php

/**
 * This is the model base class for the table "slider".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Slider".
 *
 * Columns in table "slider" available as properties of the model,
 * followed by relations of table "slider" available as properties of the model.
 *
 * @property integer $id
 * @property integer $product_id
 * @property string $image
 * @property integer $status
 * @property integer $ordering
 * @property string $create_date
 * @property string $update_Date
 *
 * @property Product $product
 */
abstract class BaseSlider extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'slider';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Slider|Sliders', $n);
	}

	public static function representingColumn() {
		return 'image';
	}

	public function rules() {
		return array(
			array('product_id, image', 'required'),
			array('product_id, status, ordering', 'numerical', 'integerOnly'=>true),
			array('image', 'length', 'max'=>100),
			array('create_date, update_Date', 'safe'),
			array('status, ordering, create_date, update_Date', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, product_id, image, status, ordering, create_date, update_Date', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'product' => array(self::BELONGS_TO, 'Product', 'product_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'product_id' => null,
			'image' => Yii::t('app', 'Image'),
			'status' => Yii::t('app', 'Status'),
			'ordering' => Yii::t('app', 'Ordering'),
			'create_date' => Yii::t('app', 'Create Date'),
			'update_Date' => Yii::t('app', 'Update Date'),
			'product' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('product_id', $this->product_id);
		$criteria->compare('image', $this->image, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('ordering', $this->ordering);
		$criteria->compare('create_date', $this->create_date, true);
		$criteria->compare('update_Date', $this->update_Date, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}