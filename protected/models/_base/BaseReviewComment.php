<?php

/**
 * This is the model base class for the table "review_comment".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ReviewComment".
 *
 * Columns in table "review_comment" available as properties of the model,
 * followed by relations of table "review_comment" available as properties of the model.
 *
 * @property integer $id
 * @property integer $user_id
 * @property integer $review_id
 * @property string $comment
 * @property integer $is_deleted
 * @property string $create_date
 * @property string $update_date
 * @property string $delete_date
 * @property integer $status
 *
 * @property User $user
 * @property ReviewProduct $review
 */
abstract class BaseReviewComment extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'review_comment';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ReviewComment|ReviewComments', $n);
	}

	public static function representingColumn() {
		return 'comment';
	}

	public function rules() {
		return array(
			array('user_id, review_id, comment, status', 'required'),
			array('user_id, review_id, is_deleted, status', 'numerical', 'integerOnly'=>true),
			array('comment', 'length', 'max'=>5000),
			array('create_date, update_date, delete_date', 'safe'),
			array('is_deleted, create_date, update_date, delete_date', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, user_id, review_id, comment, is_deleted, create_date, update_date, delete_date, status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
			'review' => array(self::BELONGS_TO, 'ReviewProduct', 'review_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_id' => null,
			'review_id' => null,
			'comment' => Yii::t('app', 'Comment'),
			'is_deleted' => Yii::t('app', 'Is Deleted'),
			'create_date' => Yii::t('app', 'Create Date'),
			'update_date' => Yii::t('app', 'Update Date'),
			'delete_date' => Yii::t('app', 'Delete Date'),
			'status' => Yii::t('app', 'Status'),
			'user' => null,
			'review' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('review_id', $this->review_id);
		$criteria->compare('comment', $this->comment, true);
		$criteria->compare('is_deleted', $this->is_deleted);
		$criteria->compare('create_date', $this->create_date, true);
		$criteria->compare('update_date', $this->update_date, true);
		$criteria->compare('delete_date', $this->delete_date, true);
		$criteria->compare('status', $this->status);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}