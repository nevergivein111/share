<?php

/**
 * This is the model base class for the table "view_review".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ViewReview".
 *
 * Columns in table "view_review" available as properties of the model,
 * followed by relations of table "view_review" available as properties of the model.
 *
 * @property integer $id
 * @property integer $user_id
 * @property integer $review_product_id
 * @property integer $status
 * @property string $create_date
 * @property integer $is_view
 *
 * @property ReviewProduct $reviewProduct
 * @property User $user
 */
abstract class BaseViewReview extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'view_review';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ViewReview|ViewReviews', $n);
	}

	public static function representingColumn() {
		return 'create_date';
	}

	public function rules() {
		return array(
			array('user_id, review_product_id, status, is_view', 'required'),
			array('user_id, review_product_id, status, is_view', 'numerical', 'integerOnly'=>true),
			array('create_date', 'safe'),
			array('create_date', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, user_id, review_product_id, status, create_date, is_view', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'reviewProduct' => array(self::BELONGS_TO, 'ReviewProduct', 'review_product_id'),
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_id' => null,
			'review_product_id' => null,
			'status' => Yii::t('app', 'Status'),
			'create_date' => Yii::t('app', 'Create Date'),
			'is_view' => Yii::t('app', 'Is View'),
			'reviewProduct' => null,
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('review_product_id', $this->review_product_id);
		$criteria->compare('status', $this->status);
		$criteria->compare('create_date', $this->create_date, true);
		$criteria->compare('is_view', $this->is_view);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}