<?php

/**
 * This is the model base class for the table "follow".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Follow".
 *
 * Columns in table "follow" available as properties of the model,
 * followed by relations of table "follow" available as properties of the model.
 *
 * @property integer $id
 * @property integer $follower_id
 * @property integer $following_id
 * @property string $create_date
 *
 * @property User $follower
 * @property User $following
 */
abstract class BaseFollow extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'follow';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Follow|Follows', $n);
	}

	public static function representingColumn() {
		return 'create_date';
	}

	public function rules() {
		return array(
			array('follower_id, following_id', 'required'),
			array('follower_id, following_id', 'numerical', 'integerOnly'=>true),
			array('create_date', 'safe'),
			array('create_date', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, follower_id, following_id, create_date', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'follower' => array(self::BELONGS_TO, 'User', 'follower_id'),
			'following' => array(self::BELONGS_TO, 'User', 'following_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'follower_id' => null,
			'following_id' => null,
			'create_date' => Yii::t('app', 'Create Date'),
			'follower' => null,
			'following' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('follower_id', $this->follower_id);
		$criteria->compare('following_id', $this->following_id);
		$criteria->compare('create_date', $this->create_date, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}