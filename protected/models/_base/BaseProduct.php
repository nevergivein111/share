<?php

/**
 * This is the model base class for the table "product".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Product".
 *
 * Columns in table "product" available as properties of the model,
 * followed by relations of table "product" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property string $alias
 * @property string $slug
 * @property string $model
 * @property string $upc
 * @property string $image
 * @property string $description
 * @property integer $status
 * @property string $create_date
 * @property string $update_date
 * @property integer $category_id
 * @property integer $sub_category_id
 * @property integer $brand_id
 * @property integer $is_deleted
 * @property string $delete_date
 *
 * @property Brand $brand
 * @property Category $category
 * @property Category $subCategory
 * @property ProductAttribute[] $productAttributes
 * @property ReviewProduct[] $reviewProducts
 * @property StoreProductInfo[] $storeProductInfos
 */
abstract class BaseProduct extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'product';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Product|Products', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, slug, image, description', 'required'),
			array('status, category_id, sub_category_id, brand_id, is_deleted', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>150),
			array('alias', 'length', 'max'=>255),
			array('slug, model, upc, image', 'length', 'max'=>100),
			array('create_date, update_date, delete_date', 'safe'),
			array('alias, model, upc, status, create_date, update_date, category_id, sub_category_id, brand_id, is_deleted, delete_date', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, alias, slug, model, upc, image, description, status, create_date, update_date, category_id, sub_category_id, brand_id, is_deleted, delete_date', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'brand' => array(self::BELONGS_TO, 'Brand', 'brand_id'),
			'category' => array(self::BELONGS_TO, 'Category', 'category_id'),
			'subCategory' => array(self::BELONGS_TO, 'Category', 'sub_category_id'),
			'productAttributes' => array(self::HAS_MANY, 'ProductAttribute', 'product_id'),
			'reviewProducts' => array(self::HAS_MANY, 'ReviewProduct', 'product_id'),
			'storeProductInfos' => array(self::HAS_MANY, 'StoreProductInfo', 'product_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'alias' => Yii::t('app', 'Alias'),
			'slug' => Yii::t('app', 'SKU'),
			'model' => Yii::t('app', 'Model'),
			'upc' => Yii::t('app', 'Upc'),
			'image' => Yii::t('app', 'Image'),
			'description' => Yii::t('app', 'Description'),
			'status' => Yii::t('app', 'Status'),
		    'model' => Yii::t('app', 'Model'),
			'create_date' => Yii::t('app', 'Create Date'),
			'update_date' => Yii::t('app', 'Update Date'),
			'category_id' => null,
			'sub_category_id' => null,
			'brand_id' => null,
			'is_deleted' => Yii::t('app', 'Is Deleted'),
			'delete_date' => Yii::t('app', 'Delete Date'),
			'brand' => null,
			'category' => null,
			'subCategory' => null,
			'productAttributes' => null,
			'reviewProducts' => null,
			'storeProductInfos' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('alias', $this->alias, true);
		$criteria->compare('slug', $this->slug, true);
		$criteria->compare('model', $this->model, true);
		$criteria->compare('upc', $this->upc, true);
		$criteria->compare('image', $this->image, true);
		$criteria->compare('description', $this->description, true);
		if($this->status > 0){
			$criteria->compare('status', $this->status);
		}
		
		$criteria->compare('model', $this->model);
		$criteria->compare('upc', $this->upc);
		$criteria->compare('create_date', $this->create_date, true);
		$criteria->compare('update_date', $this->update_date, true);
		$criteria->compare('category_id', $this->category_id);
		$criteria->compare('sub_category_id', $this->sub_category_id);
		$criteria->compare('brand_id', $this->brand_id);
		$criteria->compare('is_deleted', $this->is_deleted);
		$criteria->compare('delete_date', $this->delete_date, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}